# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
# env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  # TERM: alacritty
  # LANG: "en_US.UTF-8"
  # LC_CTYPE: en_US.UTF-8

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  #dimensions:
  #  columns: 0
  #  lines: 0
  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0
  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 4
    y: 4
    dynamic_padding: true

  opacity: 0.618
  # opacity: 0.
  # Spread additional padding evenly around the terminal content.
  #dynamic_padding: false
  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: none
  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: SimpleFullscreen
  # startup_mode: Windowed
  # Window title
  #title: Alacritty
  # Window class (Linux/BSD only):
  #class:
  # Application instance name
  #instance: Alacritty
  # General application class
  #general: Alacritty
  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None
  #scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  #history: 10000
  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3
# Font configuration
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    family: "MesloLGS NF"
    # family: "monospace"
    # family: "Menlo"

    # The `style` can be specified to pick a specific face.
    style: Regular
    # Bold font face
    #bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace
    # The `style` can be specified to pick a specific face.
    #style: Bold
    # Italic font face
    #italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace
    # The `style` can be specified to pick a specific face.
    #style: Italic
    # Bold italic font face
    #bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace
    # The `style` can be specified to pick a specific face.
    #style: Bold Italic

  # Point size
  size: 20.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  #offset:
  #  x: 0
  #  y: 0
  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0
  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
#draw_bold_text_with_bright_colors: false
# Colors (Tomorrow Night Bright)
colors:
  # Default colors
  primary:
    background: '#282c34'
    foreground: '#abb2bf'

  # Normal colors
  normal:
    # NOTE: Use '#131613' for the `black` color if you'd like to see
    # black text on the background.
    black: '#282c34'
    red: '#e06c75'
    green: '#98c379'
    yellow: '#d19a66'
    blue: '#61afef'
    magenta: '#c678dd'
    cyan: '#56b6c2'
    white: '#abb2bf'

  # Bright colors
  bright:
    black: '#5c6370'
    red: '#e06c75'
    green: '#98c379'
    yellow: '#d19a66'
    blue: '#61afef'
    magenta: '#c678dd'
    cyan: '#56b6c2'
    white: '#ffffff'

key_bindings:
    # ref: https://github.com/alacritty/alacritty/issues/62#issuecomment-347552058
    - { key: A,         mods: Alt,       chars: "\x1ba"                       }
    - { key: B,         mods: Alt,       chars: "\x1bb"                       }
    - { key: C,         mods: Alt,       chars: "\x1bc"                       }
    - { key: D,         mods: Alt,       chars: "\x1bd"                       }
    - { key: E,         mods: Alt,       chars: "\x1be"                       }
    - { key: F,         mods: Alt,       chars: "\x1bf"                       }
    - { key: G,         mods: Alt,       chars: "\x1bg"                       }
    - { key: H,         mods: Alt,       chars: "\x1bh"                       }
    - { key: I,         mods: Alt,       chars: "\x1bi"                       }
    - { key: J,         mods: Alt,       chars: "\x1bj"                       }
    - { key: K,         mods: Alt,       chars: "\x1bk"                       }
    - { key: L,         mods: Alt,       chars: "\x1bl"                       }
    - { key: M,         mods: Alt,       chars: "\x1bm"                       }
    - { key: N,         mods: Alt,       chars: "\x1bn"                       }
    - { key: O,         mods: Alt,       chars: "\x1bo"                       }
    - { key: P,         mods: Alt,       chars: "\x1bp"                       }
    - { key: Q,         mods: Alt,       chars: "\x1bq"                       }
    - { key: R,         mods: Alt,       chars: "\x1br"                       }
    - { key: S,         mods: Alt,       chars: "\x1bs"                       }
    - { key: T,         mods: Alt,       chars: "\x1bt"                       }
    - { key: U,         mods: Alt,       chars: "\x1bu"                       }
    - { key: V,         mods: Alt,       chars: "\x1bv"                       }
    - { key: W,         mods: Alt,       chars: "\x1bw"                       }
    - { key: X,         mods: Alt,       chars: "\x1bx"                       }
    - { key: Y,         mods: Alt,       chars: "\x1by"                       }
    - { key: Z,         mods: Alt,       chars: "\x1bz"                       }
    - { key: A,         mods: Alt|Shift, chars: "\x1bA"                       }
    - { key: B,         mods: Alt|Shift, chars: "\x1bB"                       }
    - { key: C,         mods: Alt|Shift, chars: "\x1bC"                       }
    - { key: D,         mods: Alt|Shift, chars: "\x1bD"                       }
    - { key: E,         mods: Alt|Shift, chars: "\x1bE"                       }
    - { key: F,         mods: Alt|Shift, chars: "\x1bF"                       }
    - { key: G,         mods: Alt|Shift, chars: "\x1bG"                       }
    - { key: H,         mods: Alt|Shift, chars: "\x1bH"                       }
    - { key: I,         mods: Alt|Shift, chars: "\x1bI"                       }
    - { key: J,         mods: Alt|Shift, chars: "\x1bJ"                       }
    - { key: K,         mods: Alt|Shift, chars: "\x1bK"                       }
    - { key: L,         mods: Alt|Shift, chars: "\x1bL"                       }
    - { key: M,         mods: Alt|Shift, chars: "\x1bM"                       }
    - { key: N,         mods: Alt|Shift, chars: "\x1bN"                       }
    - { key: O,         mods: Alt|Shift, chars: "\x1bO"                       }
    - { key: P,         mods: Alt|Shift, chars: "\x1bP"                       }
    - { key: Q,         mods: Alt|Shift, chars: "\x1bQ"                       }
    - { key: R,         mods: Alt|Shift, chars: "\x1bR"                       }
    - { key: S,         mods: Alt|Shift, chars: "\x1bS"                       }
    - { key: T,         mods: Alt|Shift, chars: "\x1bT"                       }
    - { key: U,         mods: Alt|Shift, chars: "\x1bU"                       }
    - { key: V,         mods: Alt|Shift, chars: "\x1bV"                       }
    - { key: W,         mods: Alt|Shift, chars: "\x1bW"                       }
    - { key: X,         mods: Alt|Shift, chars: "\x1bX"                       }
    - { key: Y,         mods: Alt|Shift, chars: "\x1bY"                       }
    - { key: Z,         mods: Alt|Shift, chars: "\x1bZ"                       }
    - { key: Key1,      mods: Alt,       chars: "\x1b1"                       }
    - { key: Key2,      mods: Alt,       chars: "\x1b2"                       }
    - { key: Key3,      mods: Alt,       chars: "\x1b3"                       }
    - { key: Key4,      mods: Alt,       chars: "\x1b4"                       }
    - { key: Key5,      mods: Alt,       chars: "\x1b5"                       }
    - { key: Key6,      mods: Alt,       chars: "\x1b6"                       }
    - { key: Key7,      mods: Alt,       chars: "\x1b7"                       }
    - { key: Key8,      mods: Alt,       chars: "\x1b8"                       }
    - { key: Key9,      mods: Alt,       chars: "\x1b9"                       }
    - { key: Key0,      mods: Alt,       chars: "\x1b0"                       }
    - { key: Key1,      mods: Alt|Shift,       chars: "\x1b!"                       }
    - { key: Key2,      mods: Alt|Shift,       chars: "\x1b@"                       }
    - { key: Key3,      mods: Alt|Shift,       chars: "\x1b#"                       }
    - { key: Key4,      mods: Alt|Shift,       chars: "\x1b$"                       }
    - { key: Key5,      mods: Alt|Shift,       chars: "\x1b%"                       }
    - { key: Key6,      mods: Alt|Shift,       chars: "\x1b^"                       }
    - { key: Key7,      mods: Alt|Shift,       chars: "\x1b&"                       }
    - { key: Key8,      mods: Alt|Shift,       chars: "\x1b*"                       }
    - { key: Key9,      mods: Alt|Shift,       chars: "\x1b("                       }
    - { key: Key0,      mods: Alt|Shift,       chars: "\x1b)"                       }
    - { key: Space,     mods: Control,   chars: "\x00"                        } # Ctrl + Space
    - { key: Grave,     mods: Alt,       chars: "\x1b`"                       } # Alt + `
    - { key: Grave,     mods: Alt|Shift, chars: "\x1b~"                       } # Alt + ~
    - { key: Period,    mods: Alt,       chars: "\x1b."                       } # Alt + .
    - { key: Period,    mods: Alt|Shift, chars: "\x1b>"                       } # Alt + >
    - { key: Comma,     mods: Alt|Shift, chars: "\x1b<"                       } # Alt + <
    - { key: Minus,     mods: Alt|Shift, chars: "\x1b_"                       } # Alt + _
    - { key: Backslash, mods: Alt,       chars: "\x1b\\"                      } # Alt + \
    - { key: Backslash, mods: Alt|Shift, chars: "\x1b|"                       } # Alt + |
    - { key: LBracket,  mods: Alt,       chars: "\x1b["                       } # Alt + [
    - { key: RBracket,  mods: Alt,       chars: "\x1b]"                       } # Alt + ]
    - { key: LBracket,  mods: Alt|Shift, chars: "\x1b{"                       } # Alt + [
    - { key: RBracket,  mods: Alt|Shift, chars: "\x1b}"                       } # Alt + ]
